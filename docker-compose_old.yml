version: "3.0"

networks:
  grpc-rate-api:

services:
  grpc-rate-api:
    build: ./
    environment:
      - HTTP_ADDR=:8080
      - FILE_PATH=../../files
      - PG_URL=postgres://postgres:postgres@postgres:5432/restapi?sslmode=disable
      - PG_MIGRATIONS_PATH=file://../../store/pg/migrations
      - LOG_LEVEL=debug
    command: ["./grpc-rate-api"]
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - grpc-rate-api

  postgres:
    restart: always
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=restapi
    volumes:
      - ./store/pg/data:/var/lib/postgresql/data
    networks:
      - grpc-rate-api

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - grpc-rate-api

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "6831:6831/udp"
      - "14268:14268"
    networks:
      - grpc-rate-api

#  zookeeper:
#    image: wurstmeister/zookeeper
#    hostname: zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    networks:
#      - grpc-rate-api
#    healthcheck:
#      test: ["CMD", "echo ruok | nc -w 2 localhost 2181 | grep imok"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  broker-1:
#    image: wurstmeister/kafka
#    hostname: broker-1
#    container_name: broker-1
#    depends_on:
#      - zookeeper
#    ports:
#      - "29091:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://localhost:29091
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
#    volumes:
#      - ./data/broker-1:/var/lib/kafka
#    networks:
#      - grpc-rate-api
#    healthcheck:
#      test: ["CMD", "broker-api-versions", "--bootstrap-server", "broker-1:9092"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  broker-2:
#    image: wurstmeister/kafka
#    hostname: broker-2
#    container_name: broker-2
#    depends_on:
#      - zookeeper
#    ports:
#      - "29092:9092"
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
#    volumes:
#      - ./data/broker-2:/var/lib/kafka
#    networks:
#      - grpc-rate-api
#    healthcheck:
#      test: ["CMD", "broker-api-versions", "--bootstrap-server", "broker-2:9092"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  broker-3:
#    image: wurstmeister/kafka
#    hostname: broker-3
#    container_name: broker-3
#    depends_on:
#      - zookeeper
#    ports:
#      - "29093:9092"
#    environment:
#      KAFKA_BROKER_ID: 3
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:9092,PLAINTEXT_HOST://localhost:29093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
#    volumes:
#      - ./data/broker-3:/var/lib/kafka
#    networks:
#      - grpc-rate-api
#    healthcheck:
#      test: ["CMD", "broker-api-versions", "--bootstrap-server", "broker-3:9092"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#
#  kafka-ui:
#    container_name: kafka-ui
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - 8080:8080
#    depends_on:
#      - broker-1
#      - broker-2
#      - broker-3
#    environment:
#      KAFKA_CLUSTERS_0_NAME: broker-1
#      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: broker-1:29091
#      KAFKA_CLUSTERS_0_METRICS_PORT: 19101
#      KAFKA_CLUSTERS_1_NAME: broker-2
#      KAFKA_CLUSTERS_1_BOOTSTRAP_SERVERS: broker-2:29092
#      KAFKA_CLUSTERS_1_METRICS_PORT: 19102
#      KAFKA_CLUSTERS_2_NAME: broker-3
#      KAFKA_CLUSTERS_2_BOOTSTRAP_SERVERS: broker-3:29093
#      KAFKA_CLUSTERS_2_METRICS_PORT: 19103
#      DYNAMIC_CONFIG_ENABLED: 'true'
#    networks:
#      - grpc-rate-api
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "1m"
#
#

  zookeeper:
    platform: linux/amd64
    image: confluentinc/cp-zookeeper:${CONFLUENT_PLATFORM_VERSION:-7.4.0}
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - '32181:32181'
      - '2888:2888'
      - '3888:3888'
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 32181
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - grpc-rate-api
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8081
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    environment:
      KAFKA_CLUSTERS_0_NAME: broker-1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:29091
      KAFKA_CLUSTERS_0_METRICS_PORT: 19101
      KAFKA_CLUSTERS_1_NAME: broker-2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: broker-2:29092
      KAFKA_CLUSTERS_1_METRICS_PORT: 19102
      KAFKA_CLUSTERS_2_NAME: broker-3
      KAFKA_CLUSTERS_2_BOOTSTRAPSERVERS: broker-3:29093
      KAFKA_CLUSTERS_2_METRICS_PORT: 19103
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - grpc-rate-api
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  broker-1:
    platform: linux/amd64
    image: confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION:-7.4.0}
    container_name: broker-1
    restart: unless-stopped
    ports:
      - '9091:9091'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-1:29091,EXTERNAL://localhost:9091
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_JMX_PORT: 19101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9091
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - grpc-rate-api
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  broker-2:
    platform: linux/amd64
    image: confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION:-7.4.0}
    container_name: broker-2
    restart: unless-stopped
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-2:29092,EXTERNAL://localhost:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_JMX_PORT: 19102
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9092
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - grpc-rate-api
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

  broker-3:
    platform: linux/amd64
    image: confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION:-7.4.0}
    container_name: broker-3
    restart: unless-stopped
    ports:
      - '9093:9093'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-3:29093,EXTERNAL://localhost:9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_JMX_PORT: 19102
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -vz localhost 9093
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - grpc-rate-api
    logging:
      driver: "json-file"
      options:
        max-size: "1m"