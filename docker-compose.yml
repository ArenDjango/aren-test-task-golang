version: "3.7"

networks:
  grpc-rate-api:

services:
  grpc-rate-api:
    build: ./
    environment:
      - HTTP_ADDR=:8080
      - FILE_PATH=../../files
      - PG_URL=postgres://postgres:postgres@postgres:5432/restapi?sslmode=disable
      - PG_MIGRATIONS_PATH=file://../../store/pg/migrations
      - LOG_LEVEL=debug
    command: ["./grpc-rate-api"]
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - grpc-rate-api

  postgres:
    restart: always
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=restapi
    volumes:
      - ./store/pg/data:/var/lib/postgresql/data
    networks:
      - grpc-rate-api

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - grpc-rate-api

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "6831:6831/udp"
      - "14268:14268"
    networks:
      - grpc-rate-api

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - grpc-rate-api

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    depends_on:
      - kafka0
      - kafka1
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka0
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      KAFKA_CLUSTERS_1_NAME: kafka1
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka1:39092
      DYNAMIC_CONFIG_ENABLED: "true"
    networks:
      - grpc-rate-api

  kafka0:
    container_name: kafka0
    image: confluentinc/cp-kafka:7.2.1.arm64
    ports:
      - 9092:9092
      - "7071:7071" # JMX Exporter порт
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093, 2@kafka1:39093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      KAFKA_OPTS: "-javaagent:/usr/local/jmx_exporter/jmx_prometheus_javaagent-0.16.1.jar=7071:/usr/local/jmx_exporter/kafka-2_0_0.yml -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=7091 -Dcom.sun.management.jmxremote.rmi.port=7091 -Djava.rmi.server.hostname=localhost"
    volumes:
      - ./kafka/scripts/run_workaround.sh:/tmp/run_workaround.sh
      - ./jmx_exporter/jmx_prometheus_javaagent-0.16.1.jar:/usr/local/jmx_exporter/jmx_prometheus_javaagent-0.16.1.jar
      - ./jmx_exporter/kafka-2_0_0.yml:/usr/local/jmx_exporter/kafka-2_0_0.yml
      - ./jmx_exporter/jmxremote.password:/usr/lib/jvm/zulu11-ca/conf/management/jmxremote.password
    command: "bash -c '/tmp/run_workaround.sh && /etc/confluent/docker/run'"
    networks:
      - grpc-rate-api

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:7.2.1.arm64
    ports:
      - 9093:9093
      - "7072:7072" # JMX Exporter порт
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:39092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka1:39092,CONTROLLER://kafka1:39093,PLAINTEXT_HOST://:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093, 2@kafka1:39093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      KAFKA_OPTS: "-javaagent:/usr/local/jmx_exporter/jmx_prometheus_javaagent-0.16.1.jar=7072:/usr/local/jmx_exporter/kafka-2_0_0.yml -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=7092 -Dcom.sun.management.jmxremote.rmi.port=7092 -Djava.rmi.server.hostname=localhost"
    volumes:
      - ./kafka/scripts/run_workaround.sh:/tmp/run_workaround.sh
      - ./jmx_exporter/jmx_prometheus_javaagent-0.16.1.jar:/usr/local/jmx_exporter/jmx_prometheus_javaagent-0.16.1.jar
      - ./jmx_exporter/kafka-2_0_0.yml:/usr/local/jmx_exporter/kafka-2_0_0.yml
      - ./jmx_exporter/jmxremote.password:/usr/lib/jvm/zulu11-ca/conf/management/jmxremote.password
    command: "bash -c '/tmp/run_workaround.sh && /etc/confluent/docker/run'"
    networks:
      - grpc-rate-api

  kafka-init-topics:
    container_name: init-topics
    image: confluentinc/cp-kafka:7.2.1.arm64
    depends_on:
      - kafka0
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka0:29092,kafka1:39092 1 30 && \
      kafka-topics --create --topic ws-6-example --partitions 3 --replication-factor 2 --if-not-exists --bootstrap-server kafka0:29092'"
    networks:
      - grpc-rate-api

volumes:
  grafana-storage: